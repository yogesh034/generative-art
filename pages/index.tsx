import axios from 'axios';
import type { NextPage } from 'next';
import Head from 'next/head';
import Image from 'next/image';
import { useEffect, useRef, useState } from 'react';
import styles from '../styles/Home.module.css';
declare global {
  interface DetailedHTMLProps {
    webkitdirectory?: any;
    mozdirectory?: any;
  }
}
const Home: NextPage = () => {
  const [uploadedFolderName, setUploadedFolderNames] = useState([]);
  const [editionSize, setEditionSize] = useState('');
  const [filename,setFilename] = useState('');

  const handleCapture = async (target: any) => {
    console.log('target[0] :>> ', target[0]);
    setFilename(target[0].name)
    const body = new FormData();
    body.append('file', target[0]);
    const response = await fetch('/api/file', {
      method: 'POST',
      body,
    });
    const result = await response?.json();
    if(result?.sucess == false){
    console.log('result', result)

    }
    else{
      setUploadedFolderNames(result?.data);
    }
  };

  const ref = useRef<HTMLInputElement>(null);
const submithandle = async()=>{
  const body = new FormData();
    body.append('editionSize', editionSize);
    body.append('filename',filename);
  const response = await fetch('/api/genrateArtImage', {
    method: 'POST',
    body,
  });
  const result = await response?.json();
}
 
  console.log('uploadedFolderName', uploadedFolderName);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <div className="inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-md sm:w-full sm:p-6">
          {uploadedFolderName?.length === 0 ? (
            <div>
              <div>
                <div className="mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-blue-700">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    fill="none"
                    viewBox="0 0 24 24"
                    strokeWidth="2"
                    stroke="currentColor"
                    aria-hidden="true"
                    className="h-6 w-6 text-white"
                  >
                    <path
                      strokeLinecap="round"
                      strokeLinejoin="round"
                      d="M5 19a2 2 0 01-2-2V7a2 2 0 012-2h4l2 2h4a2 2 0 012 2v1M5 19h14a2 2 0 002-2v-5a2 2 0 00-2-2H9a2 2 0 00-2 2v5a2 2 0 01-2 2z"
                    ></path>
                  </svg>
                </div>
              </div>

              <button className="mt-4 relative block w-full border-2 border-gray-300 border-dashed rounded-lg p-12 text-center hover:border-gray-400 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 cursor-pointer">
                <label
                  htmlFor="file-upload"
                  className="relative cursor-pointer  rounded-md font-medium text-primary-6000 hover:text-primary-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-primary-500"
                >
                  <div className="mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-blue-100">
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      fill="none"
                      viewBox="0 0 24 24"
                      strokeWidth="2"
                      stroke="currentColor"
                      aria-hidden="true"
                      className="h-6 w-6 text-blue-600"
                    >
                      <path
                        strokeLinecap="round"
                        strokeLinejoin="round"
                        d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-8l-4-4m0 0L8 8m4-4v12"
                      ></path>
                    </svg>
                  </div>
                  Upload Folder
                  <input
                    hidden
                    className="sr-only"
                    id="file-upload"
                    name="file-upload"
                    type="file"
                    // ref={ref}

                    onChange={(e) => {
                      handleCapture(e.target.files);
                    }}
                  />
                </label>
                <span className="mt-1 block text-sm text-gray-500">
                  {' '}
                  Selected folder should contain a folder for each trait with a
                  file for each trait variation.{' '}
                </span>
              </button>
            </div>
          ) : (
            <div className="gap-y-14">
              {uploadedFolderName?.map((name, key) => {
                return (
                  <div key={key} className="mb-1">
                    <div className="relative flex justify-between p-2 rounded-3xl bg-neutral-100 dark:bg-neutral-800 hover:shadow-xl transition-shadow">
                      <div className="flex flex-col justify-center flex-grow">
                        <h2 className="block font-medium sm:text-lg dark:text-white">
                          {name}
                        </h2>
                      </div>
                      
                    </div>
                    
                  </div>
                );
              })}
              <input type="text" name="editionSize" id="editionSize" onChange={(e)=>{setEditionSize(e.target.value)}} />
              <button  onClick={() => {
                      submithandle();
                    }}>Genrate</button>
            </div>
          )}
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
};

export default Home;
